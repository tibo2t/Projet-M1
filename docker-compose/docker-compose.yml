version: '3.7'

services:
  reverse-proxy:
    restart: always
    build:
      context: ./traefik
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"    # Port pour le dashboard de Traefik
    volumes:
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml
      - /var/run/docker.sock:/var/run/docker.sock  # Montage du socket Docker
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.local`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.wp.rule=Host(`wp.local`)"
      - "traefik.http.services.wp.loadbalancer.server.port=80"
      - "traefik.http.services.wp.loadbalancer.healthCheck.path=/health.php"
      - "traefik.http.services.wp.loadbalancer.healthCheck.interval=10s"

  wp-1:  # Premier conteneur WordPress
    build:
      context: ./wp
    container_name: wp-1
    ports:
      - "8082:80"
    networks:
      - web
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.wp.loadbalancer.server.port=80"

  wp-2:  # Deuxi√®me conteneur WordPress
    build:
      context: ./wp
    container_name: wp-2
    ports:
      - "8083:80"
    networks:
      - web
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.wp.loadbalancer.server.port=80"

  mariadb:  # Service MariaDB
    build:
      context: ./db
    container_name: mariadb
    ports:
      - "3306:3306"
    volumes:
      - mariadb:/var/lib/mysql
    networks:
      - backend

networks:
  web:
    external: false
  backend:
    external: false

volumes:
  mariadb:
    external: false
